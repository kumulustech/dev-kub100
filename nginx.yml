apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: 2016-11-30T22:50:21Z
  generation: 2
  labels:
    run: nginx
  name: nginx
  namespace: default
  resourceVersion: "249393"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/nginx
  uid: 5fb4807d-b74f-11e6-b4da-76afdd777172
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: nginx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: 2016-11-30T23:04:42Z
  labels:
    run: nginx
  name: nginx
  namespace: default
  resourceVersion: "250377"
  selfLink: /api/v1/namespaces/default/services/nginx
  uid: 60fe94fd-b751-11e6-b4da-76afdd777172
spec:
  clusterIP: 10.0.0.231
  ports:
  - nodePort: 32600
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: nginx
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
